{"version":3,"sources":["assets/strava.svg","App.tsx","index.tsx"],"names":["syncLink","process","instagramMediaUrl","baseColumns","id","Header","accessor","prColumns","Cell","props","date","Date","setSeconds","cell","value","toISOString","substr","effortsColumns","StravaButton","className","src","stravaLogo","alt","Table","useTable","columns","data","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","pageIndex","pageSize","gotoPage","previousPage","nextPage","setPageSize","canPreviousPage","canNextPage","useState","paginationElements","setPaginationElements","useEffect","Array","Math","ceil","length","fill","map","el","i","aria-label","aria-current","onClick","style","height","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","getCellProps","role","disabled","App","setData","activeTabIndex","setActiveTabIndex","tabsHeaderItems","setTabsHeaderItems","leaderboards","setLeaderboards","igPosts","setIgPosts","igLoading","setIgLoading","a","fetch","res","json","dat","sort","b","segmentName","slice","text","topPosts","JSON","parse","split","find","l","includes","match","entry_data","LocationsPage","graphql","location","edge_location_to_top_posts","edges","post","rel","target","href","node","shortcode","thumbnail_src","loadData","loadInstagram","segment","index","curSegment","entries","efforts","pr","getFullYear","xmlns","width","viewBox","d","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","register","then","registration","console","log","catch","error"],"mappings":"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","file":"static/js/main.b7c13930.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/strava.a72b2b3c.svg\";","import React, { useEffect, useState } from 'react'\nimport { Column, usePagination, useTable } from 'react-table'\n\nimport './App.scss'\nimport stravaLogo from './assets/strava.svg'\n\ninterface Entry {\n  pr: number\n  efforts: number\n}\n\nconst syncLink = 'http://www.strava.com/oauth/authorize?'\n  + `client_id=${process.env.REACT_APP_STRAVA_CLIENT_ID}`\n  + '&response_type=code'\n  + `&redirect_uri=${process.env.REACT_APP_API_BASE}/strava/callback`\n  + '&scope=read'\nconst instagramMediaUrl = 'https://www.instagram.com/explore/locations/260718750/parc-des-buttes-chaumont/'\n\nconst baseColumns = [\n  {\n    id: 'rank',\n    Header: 'Rank'\n  },\n  {\n    id: 'name',\n    Header: 'Name',\n    accessor: 'name'\n  }\n] as Column[]\nconst prColumns = [\n  ...baseColumns,\n  {\n    id: 'pr',\n    Header: 'Time',\n    accessor: 'pr',\n    Cell: (props: any) => {\n      const date = new Date(0)\n      date.setSeconds(props.cell.value)\n      return date.toISOString().substr(11, 8)\n    }\n  }\n]\nconst effortsColumns = [\n  ...baseColumns,\n  {\n    id: 'efforts',\n    Header: 'Efforts',\n    accessor: 'efforts'\n  }\n]\n\nfunction StravaButton () {\n  return (\n    <div className=\"StravaButton\">\n      <span>Update my stats</span>\n      <img src={stravaLogo} alt=\"Strava Logo\"/>\n    </div>\n  )\n}\n\nfunction Table (props: any) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    // @ts-ignore\n    page,\n    // @ts-ignore\n    state: { pageIndex, pageSize },\n    // @ts-ignore\n    gotoPage,\n    // @ts-ignore\n    previousPage,\n    // @ts-ignore\n    nextPage,\n    // @ts-ignore\n    setPageSize,\n    // @ts-ignore\n    canPreviousPage,\n    // @ts-ignore\n    canNextPage\n  } = useTable({\n    columns: props.columns,\n    data: props.data\n  }, usePagination)\n\n  const [paginationElements, setPaginationElements] = useState([] as JSX.Element[])\n  // eslint-disable-next-line\n  useEffect(init, [])\n\n  function init () {\n    setPageSize(10)\n\n    setPaginationElements(Array(Math.ceil(props.data.length / pageSize)).fill(0).map((el: any, i: number) => (\n      <li key={i}>\n        <button className={'pagination-link' + (pageIndex === i ? ' is-current' : '')}\n                aria-label={'Page ' + (i + 1)}\n                aria-current=\"page\"\n                onClick={gotoPage(i)}>\n          {i + 1}\n        </button>\n      </li>\n    )))\n  }\n\n  return (\n    <>\n      <table style={{ height: '200px' }} className=\"table is-fullwidth\" {...getTableProps()}>\n        <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n        {page.map((row: any, i: number) => {\n          prepareRow(row)\n\n          return (\n            <tr key={i} {...row.getRowProps()}>\n              {row.cells.map((cell: any) => {\n                if (cell.column.id === 'rank') {\n                  return (\n                    <td key={cell.column.Header} {...cell.getCellProps()}>\n                      {i + 1}\n                    </td>\n                  )\n                }\n\n                return (\n                  <td key={cell.column.Header} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n        </tbody>\n      </table>\n\n      <nav className=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n        <button className=\"pagination-previous\" disabled={!canPreviousPage} onClick={previousPage}>\n          Previous\n        </button>\n\n        <button className=\"pagination-next\" disabled={!canNextPage} onClick={nextPage}>\n          Next\n        </button>\n\n        <ul className=\"pagination-list\">\n          {paginationElements}\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nfunction App () {\n  const [data, setData] = useState([] as any)\n  const [activeTabIndex, setActiveTabIndex] = useState(0)\n  const [tabsHeaderItems, setTabsHeaderItems] = useState([] as JSX.Element[])\n  const [leaderboards, setLeaderboards] = useState([] as JSX.Element[])\n  const [igPosts, setIgPosts] = useState([] as JSX.Element[])\n  const [igLoading, setIgLoading] = useState(true)\n\n  useEffect(init, [])\n  useEffect(processData, [data, activeTabIndex])\n\n  function init () {\n    async function loadData () {\n      const res = await fetch(`${process.env.REACT_APP_API_BASE}/segments`)\n      const dat = await res.json()\n\n      dat.sort((a: any, b: any) => a.segmentName > b.segmentName ? -1 : 1)\n      setData([...dat.slice(2, 4), ...dat.slice(0, 2)])\n    }\n\n    async function loadInstagram () {\n      const res = await fetch(instagramMediaUrl)\n      const dat = await res.text()\n\n      setIgLoading(false)\n\n      // @ts-ignore\n      const topPosts = JSON.parse(dat\n        .split('\\n')\n        .find((l: string) => l.includes('_sharedData'))\n        .match(/{.+}/)[0])\n        .entry_data\n        .LocationsPage[0]\n        .graphql\n        .location\n        .edge_location_to_top_posts\n        .edges\n\n      setIgPosts(topPosts.slice(0, 15).map((post: any) => {\n        return (\n          <div key={post.node.shortcode} className=\"column is-one-fifth post\">\n            <a rel=\"nofollow noopener noreferrer\" target=\"_blank\"\n               className=\"link\" href={'https://instagram.com/p/' + post.node.shortcode}>\n              <img className=\"image\" src={post.node.thumbnail_src} alt={'Instagram Post ' + post.node.shortcode}/>\n            </a>\n          </div>\n        )\n      }))\n    }\n\n    loadData()\n    loadInstagram()\n  }\n\n  function processData () {\n    if (!data.length) {\n      return\n    }\n\n    setTabsHeaderItems(data.map((segment: any, index: number) => {\n      return (\n        <li key={index}\n            className={activeTabIndex === index ? 'is-active' : ''}\n            onClick={() => setActiveTabIndex(index)}>\n          {/* eslint-disable-next-line*/}\n          <a>{segment.segmentName}</a>\n        </li>\n      )\n    }))\n\n    const curSegment = data[activeTabIndex]\n    setLeaderboards([\n      <div key={curSegment.id + '-time'} className=\"column is-half leaderboard\">\n        <div className=\"box\">\n          <h2 className=\"subtitle\">Time</h2>\n\n          <Table columns={prColumns}\n                 data={curSegment.entries.sort((a: Entry, b: Entry) => a.efforts - b.efforts)}/>\n        </div>\n      </div>,\n      <div key={curSegment.id + '-efforts'} className=\"column is-half leaderboard\">\n        <div className=\"box\">\n          <h2 className=\"subtitle\">Efforts</h2>\n\n          <Table columns={effortsColumns}\n                 data={curSegment.entries.sort((a: Entry, b: Entry) => a.pr - b.pr)}/>\n        </div>\n      </div>\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n      <section className=\"section home\">\n        <div className=\"overlay\"/>\n\n        <div className=\"content\">\n          <h1 className=\"title\">Parc des Buttes Chaumont</h1>\n\n          <a href={syncLink}>\n            <StravaButton/>\n          </a>\n        </div>\n      </section>\n\n      <section className=\"section leaderboards\">\n        <h1 className=\"title has-text-centered\">Leaderboard</h1>\n        <br/>\n\n        <div className=\"container\">\n          <div className=\"tabs is-centered\">\n            <ul>\n              {tabsHeaderItems}\n            </ul>\n          </div>\n\n          <div className=\"columns\">\n            {leaderboards}\n          </div>\n        </div>\n      </section>\n\n      <section className=\"section history\">\n        <h1 className=\"title has-text-centered\">History</h1>\n        <br/>\n\n        <div className=\"container\">\n          <p className=\"paragraph\">\n            The Parc des Buttes Chaumont (pronounced [paʁk de byt ʃomɔ̃]) is a public park situated in northeastern\n            Paris, France, in the 19th arrondissement. Occupying 24.7 hectares (61 acres), it is the fifth-largest park\n            in Paris, after the Bois de Vincennes, Bois de Boulogne, Parc de la Villette and Tuileries Garden.\n          </p>\n\n          <p className=\"paragraph\">\n            Opened in 1867, late in the regime of Napoleon III, it was built according to plans by Jean-Charles Adolphe\n            Alphand, who created all the major parks demanded by the Emperor. The park has 5.5 kilometres (3.4 miles) of\n            roads and 2.2 kilometres (1.4 miles) of paths. The most famous feature of the park is the Temple de la\n            Sibylle, inspired by the Temple of Vesta in Tivoli, Italy, and perched at the top of a cliff fifty metres\n            above the waters of the artificial lake.\n          </p>\n\n          <p className=\"paragraph\">\n            <a rel=\"nofollow noopener noreferrer\" target=\"_blank\"\n               href=\"https://en.wikipedia.org/wiki/Parc_des_Buttes_Chaumont\">\n              <i>Read More..</i>\n            </a>\n          </p>\n        </div>\n      </section>\n\n      <section className=\"section instagram\">\n        <h1 className=\"title has-text-centered\">Media</h1>\n        <br/>\n\n        <div className=\"container\">\n          <div className=\"columns is-flex-wrap-wrap\">\n            {!igLoading && igPosts}\n            {igLoading && (\n              <div className=\"loading-container\">\n                <i>Loading Media..</i>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n\n      <footer className=\"footer has-text-grey has-background-grey-darker has-text-centered\">\n        <div>&copy; buttes-chaumont.fr {new Date().getFullYear()}</div>\n\n        <div className=\"social\">\n          <a rel=\"noreferrer noopener nofollow\" target=\"_blank\"\n             href=\"https://www.facebook.com/Buttes-chaumontfr-105725564839140\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#7a7a7a\"\n                    d=\"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-3 7h-1.924c-.615 0-1.076.252-1.076.889v1.111h3l-.238 3h-2.762v8h-3v-8h-2v-3h2v-1.923c0-2.022 1.064-3.077 3.461-3.077h2.539v3z\"/>\n            </svg>\n          </a>\n\n          <a rel=\"noreferrer noopener nofollow\" target=\"_blank\"\n             href=\"https://github.com/stefanoschrs/buttes-chaumont.fr\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"#7a7a7a\"\n                    d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n            </svg>\n          </a>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  // @ts-ignore\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker\n    .register('./sw.js', {})\n    .then((registration) => {\n      console.log(registration)\n    })\n    .catch((error) => console.log('Registration failed with ' + error))\n}\n"],"sourceRoot":""}